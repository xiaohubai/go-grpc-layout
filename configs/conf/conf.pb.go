// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.4
// source: configs/conf/conf.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Conf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Global  *Global  `protobuf:"bytes,1,opt,name=global,proto3" json:"global,omitempty"`
	Server  *Server  `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
	Data    *Data    `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	Jwt     *Jwt     `protobuf:"bytes,4,opt,name=jwt,proto3" json:"jwt,omitempty"`
	Trace   *Trace   `protobuf:"bytes,5,opt,name=trace,proto3" json:"trace,omitempty"`
	Zap     *Zap     `protobuf:"bytes,6,opt,name=zap,proto3" json:"zap,omitempty"`
	Captcha *Captcha `protobuf:"bytes,7,opt,name=captcha,proto3" json:"captcha,omitempty"`
	Consul  *Consul  `protobuf:"bytes,8,opt,name=Consul,proto3" json:"Consul,omitempty"`
	Casbin  *Casbin  `protobuf:"bytes,9,opt,name=casbin,proto3" json:"casbin,omitempty"`
	Limiter *Limiter `protobuf:"bytes,10,opt,name=limiter,proto3" json:"limiter,omitempty"`
	Cors    *Cors    `protobuf:"bytes,11,opt,name=cors,proto3" json:"cors,omitempty"`
	Kafka   *Kafka   `protobuf:"bytes,12,opt,name=kafka,proto3" json:"kafka,omitempty"`
	Email   *Email   `protobuf:"bytes,13,opt,name=email,proto3" json:"email,omitempty"`
	Holmes  *Holmes  `protobuf:"bytes,14,opt,name=holmes,proto3" json:"holmes,omitempty"`
}

func (x *Conf) Reset() {
	*x = Conf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conf) ProtoMessage() {}

func (x *Conf) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conf.ProtoReflect.Descriptor instead.
func (*Conf) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{0}
}

func (x *Conf) GetGlobal() *Global {
	if x != nil {
		return x.Global
	}
	return nil
}

func (x *Conf) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *Conf) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Conf) GetJwt() *Jwt {
	if x != nil {
		return x.Jwt
	}
	return nil
}

func (x *Conf) GetTrace() *Trace {
	if x != nil {
		return x.Trace
	}
	return nil
}

func (x *Conf) GetZap() *Zap {
	if x != nil {
		return x.Zap
	}
	return nil
}

func (x *Conf) GetCaptcha() *Captcha {
	if x != nil {
		return x.Captcha
	}
	return nil
}

func (x *Conf) GetConsul() *Consul {
	if x != nil {
		return x.Consul
	}
	return nil
}

func (x *Conf) GetCasbin() *Casbin {
	if x != nil {
		return x.Casbin
	}
	return nil
}

func (x *Conf) GetLimiter() *Limiter {
	if x != nil {
		return x.Limiter
	}
	return nil
}

func (x *Conf) GetCors() *Cors {
	if x != nil {
		return x.Cors
	}
	return nil
}

func (x *Conf) GetKafka() *Kafka {
	if x != nil {
		return x.Kafka
	}
	return nil
}

func (x *Conf) GetEmail() *Email {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *Conf) GetHolmes() *Holmes {
	if x != nil {
		return x.Holmes
	}
	return nil
}

type Global struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppName string `protobuf:"bytes,1,opt,name=appName,proto3" json:"appName,omitempty"`
	Env     string `protobuf:"bytes,2,opt,name=env,proto3" json:"env,omitempty"`
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Id      string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Global) Reset() {
	*x = Global{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Global) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Global) ProtoMessage() {}

func (x *Global) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Global.ProtoReflect.Descriptor instead.
func (*Global) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{1}
}

func (x *Global) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *Global) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *Global) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Global) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Http *Server_HTTP `protobuf:"bytes,1,opt,name=http,proto3" json:"http,omitempty"`
	Grpc *Server_GRPC `protobuf:"bytes,2,opt,name=grpc,proto3" json:"grpc,omitempty"`
}

func (x *Server) Reset() {
	*x = Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{2}
}

func (x *Server) GetHttp() *Server_HTTP {
	if x != nil {
		return x.Http
	}
	return nil
}

func (x *Server) GetGrpc() *Server_GRPC {
	if x != nil {
		return x.Grpc
	}
	return nil
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mysql *Data_Mysql `protobuf:"bytes,1,opt,name=mysql,proto3" json:"mysql,omitempty"`
	Redis *Data_Redis `protobuf:"bytes,2,opt,name=redis,proto3" json:"redis,omitempty"`
	Es    *Data_ES    `protobuf:"bytes,3,opt,name=es,proto3" json:"es,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{3}
}

func (x *Data) GetMysql() *Data_Mysql {
	if x != nil {
		return x.Mysql
	}
	return nil
}

func (x *Data) GetRedis() *Data_Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *Data) GetEs() *Data_ES {
	if x != nil {
		return x.Es
	}
	return nil
}

type Consul struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host        string            `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Scheme      string            `protobuf:"bytes,2,opt,name=scheme,proto3" json:"scheme,omitempty"`
	HealthCheck bool              `protobuf:"varint,3,opt,name=healthCheck,proto3" json:"healthCheck,omitempty"`
	Token       string            `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	Kv          *Consul_Kv        `protobuf:"bytes,5,opt,name=kv,proto3" json:"kv,omitempty"`
	Discovery   *Consul_Discovery `protobuf:"bytes,6,opt,name=discovery,proto3" json:"discovery,omitempty"`
}

func (x *Consul) Reset() {
	*x = Consul{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Consul) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consul) ProtoMessage() {}

func (x *Consul) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consul.ProtoReflect.Descriptor instead.
func (*Consul) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{4}
}

func (x *Consul) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Consul) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *Consul) GetHealthCheck() bool {
	if x != nil {
		return x.HealthCheck
	}
	return false
}

func (x *Consul) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Consul) GetKv() *Consul_Kv {
	if x != nil {
		return x.Kv
	}
	return nil
}

func (x *Consul) GetDiscovery() *Consul_Discovery {
	if x != nil {
		return x.Discovery
	}
	return nil
}

type Jwt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SigningKey  string `protobuf:"bytes,1,opt,name=signingKey,proto3" json:"signingKey,omitempty"`
	ExpiresTime int32  `protobuf:"varint,2,opt,name=expiresTime,proto3" json:"expiresTime,omitempty"`
	BufferTime  int32  `protobuf:"varint,3,opt,name=bufferTime,proto3" json:"bufferTime,omitempty"`
	Issuer      string `protobuf:"bytes,4,opt,name=issuer,proto3" json:"issuer,omitempty"`
}

func (x *Jwt) Reset() {
	*x = Jwt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Jwt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jwt) ProtoMessage() {}

func (x *Jwt) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jwt.ProtoReflect.Descriptor instead.
func (*Jwt) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{5}
}

func (x *Jwt) GetSigningKey() string {
	if x != nil {
		return x.SigningKey
	}
	return ""
}

func (x *Jwt) GetExpiresTime() int32 {
	if x != nil {
		return x.ExpiresTime
	}
	return 0
}

func (x *Jwt) GetBufferTime() int32 {
	if x != nil {
		return x.BufferTime
	}
	return 0
}

func (x *Jwt) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

type Trace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *Trace) Reset() {
	*x = Trace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trace) ProtoMessage() {}

func (x *Trace) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trace.ProtoReflect.Descriptor instead.
func (*Trace) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{6}
}

func (x *Trace) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

type Zap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level      string `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	Format     string `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	Filename   string `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	MaxSize    int32  `protobuf:"varint,4,opt,name=maxSize,proto3" json:"maxSize,omitempty"`
	MaxBackups int32  `protobuf:"varint,5,opt,name=maxBackups,proto3" json:"maxBackups,omitempty"`
	MaxAge     int32  `protobuf:"varint,6,opt,name=maxAge,proto3" json:"maxAge,omitempty"`
	Compress   bool   `protobuf:"varint,7,opt,name=compress,proto3" json:"compress,omitempty"`
}

func (x *Zap) Reset() {
	*x = Zap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Zap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Zap) ProtoMessage() {}

func (x *Zap) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Zap.ProtoReflect.Descriptor instead.
func (*Zap) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{7}
}

func (x *Zap) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Zap) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *Zap) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Zap) GetMaxSize() int32 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *Zap) GetMaxBackups() int32 {
	if x != nil {
		return x.MaxBackups
	}
	return 0
}

func (x *Zap) GetMaxAge() int32 {
	if x != nil {
		return x.MaxAge
	}
	return 0
}

func (x *Zap) GetCompress() bool {
	if x != nil {
		return x.Compress
	}
	return false
}

type Captcha struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height   int32   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Width    int32   `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Length   int32   `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	MaxSkew  float32 `protobuf:"fixed32,4,opt,name=maxSkew,proto3" json:"maxSkew,omitempty"`
	DotCount int32   `protobuf:"varint,5,opt,name=dotCount,proto3" json:"dotCount,omitempty"`
}

func (x *Captcha) Reset() {
	*x = Captcha{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Captcha) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Captcha) ProtoMessage() {}

func (x *Captcha) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Captcha.ProtoReflect.Descriptor instead.
func (*Captcha) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{8}
}

func (x *Captcha) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Captcha) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Captcha) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Captcha) GetMaxSkew() float32 {
	if x != nil {
		return x.MaxSkew
	}
	return 0
}

func (x *Captcha) GetDotCount() int32 {
	if x != nil {
		return x.DotCount
	}
	return 0
}

type Casbin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Casbin) Reset() {
	*x = Casbin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Casbin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Casbin) ProtoMessage() {}

func (x *Casbin) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Casbin.ProtoReflect.Descriptor instead.
func (*Casbin) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{9}
}

func (x *Casbin) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Limiter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rate int32 `protobuf:"varint,1,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *Limiter) Reset() {
	*x = Limiter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Limiter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Limiter) ProtoMessage() {}

func (x *Limiter) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Limiter.ProtoReflect.Descriptor instead.
func (*Limiter) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{10}
}

func (x *Limiter) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

type Cors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode      string            `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode,omitempty"`
	Whitelist []*Cors_Whitelist `protobuf:"bytes,2,rep,name=whitelist,proto3" json:"whitelist,omitempty"`
}

func (x *Cors) Reset() {
	*x = Cors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cors) ProtoMessage() {}

func (x *Cors) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cors.ProtoReflect.Descriptor instead.
func (*Cors) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{11}
}

func (x *Cors) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *Cors) GetWhitelist() []*Cors_Whitelist {
	if x != nil {
		return x.Whitelist
	}
	return nil
}

type Kafka struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Producer []*Kafka_Producer `protobuf:"bytes,1,rep,name=producer,proto3" json:"producer,omitempty"`
	Consumer []*Kafka_Consumer `protobuf:"bytes,2,rep,name=consumer,proto3" json:"consumer,omitempty"`
}

func (x *Kafka) Reset() {
	*x = Kafka{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Kafka) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kafka) ProtoMessage() {}

func (x *Kafka) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kafka.ProtoReflect.Descriptor instead.
func (*Kafka) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{12}
}

func (x *Kafka) GetProducer() []*Kafka_Producer {
	if x != nil {
		return x.Producer
	}
	return nil
}

func (x *Kafka) GetConsumer() []*Kafka_Consumer {
	if x != nil {
		return x.Consumer
	}
	return nil
}

type Email struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host     string          `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port     int32           `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	From     string          `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	Nickname string          `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	AppName  string          `protobuf:"bytes,5,opt,name=appName,proto3" json:"appName,omitempty"`
	IsSsl    bool            `protobuf:"varint,6,opt,name=isSsl,proto3" json:"isSsl,omitempty"`
	Secret   string          `protobuf:"bytes,7,opt,name=secret,proto3" json:"secret,omitempty"`
	Topics   []*Email_Topics `protobuf:"bytes,8,rep,name=topics,proto3" json:"topics,omitempty"`
}

func (x *Email) Reset() {
	*x = Email{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Email) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Email) ProtoMessage() {}

func (x *Email) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Email.ProtoReflect.Descriptor instead.
func (*Email) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{13}
}

func (x *Email) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Email) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Email) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Email) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Email) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *Email) GetIsSsl() bool {
	if x != nil {
		return x.IsSsl
	}
	return false
}

func (x *Email) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *Email) GetTopics() []*Email_Topics {
	if x != nil {
		return x.Topics
	}
	return nil
}

type Holmes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path            string            `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Log             string            `protobuf:"bytes,2,opt,name=log,proto3" json:"log,omitempty"`
	CollectInterval string            `protobuf:"bytes,3,opt,name=collectInterval,proto3" json:"collectInterval,omitempty"`
	CPU             *Holmes_CPU       `protobuf:"bytes,4,opt,name=cPU,proto3" json:"cPU,omitempty"`
	Mem             *Holmes_Mem       `protobuf:"bytes,5,opt,name=mem,proto3" json:"mem,omitempty"`
	GCHeap          *Holmes_GCHeap    `protobuf:"bytes,6,opt,name=gCHeap,proto3" json:"gCHeap,omitempty"`
	Goroutine       *Holmes_Goroutine `protobuf:"bytes,7,opt,name=goroutine,proto3" json:"goroutine,omitempty"`
}

func (x *Holmes) Reset() {
	*x = Holmes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Holmes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Holmes) ProtoMessage() {}

func (x *Holmes) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Holmes.ProtoReflect.Descriptor instead.
func (*Holmes) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{14}
}

func (x *Holmes) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Holmes) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *Holmes) GetCollectInterval() string {
	if x != nil {
		return x.CollectInterval
	}
	return ""
}

func (x *Holmes) GetCPU() *Holmes_CPU {
	if x != nil {
		return x.CPU
	}
	return nil
}

func (x *Holmes) GetMem() *Holmes_Mem {
	if x != nil {
		return x.Mem
	}
	return nil
}

func (x *Holmes) GetGCHeap() *Holmes_GCHeap {
	if x != nil {
		return x.GCHeap
	}
	return nil
}

func (x *Holmes) GetGoroutine() *Holmes_Goroutine {
	if x != nil {
		return x.Goroutine
	}
	return nil
}

type Server_HTTP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr    string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout string `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *Server_HTTP) Reset() {
	*x = Server_HTTP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_HTTP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_HTTP) ProtoMessage() {}

func (x *Server_HTTP) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_HTTP.ProtoReflect.Descriptor instead.
func (*Server_HTTP) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Server_HTTP) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_HTTP) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_HTTP) GetTimeout() string {
	if x != nil {
		return x.Timeout
	}
	return ""
}

type Server_GRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr    string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout string `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *Server_GRPC) Reset() {
	*x = Server_GRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_GRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_GRPC) ProtoMessage() {}

func (x *Server_GRPC) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_GRPC.ProtoReflect.Descriptor instead.
func (*Server_GRPC) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Server_GRPC) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_GRPC) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_GRPC) GetTimeout() string {
	if x != nil {
		return x.Timeout
	}
	return ""
}

type Data_Mysql struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Driver string `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *Data_Mysql) Reset() {
	*x = Data_Mysql{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Mysql) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Mysql) ProtoMessage() {}

func (x *Data_Mysql) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Mysql.ProtoReflect.Descriptor instead.
func (*Data_Mysql) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Data_Mysql) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *Data_Mysql) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type Data_Redis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network      string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr         string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Password     string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Db           int32  `protobuf:"varint,4,opt,name=db,proto3" json:"db,omitempty"`
	DialTimeout  string `protobuf:"bytes,5,opt,name=dialTimeout,proto3" json:"dialTimeout,omitempty"`
	ReadTimeout  string `protobuf:"bytes,6,opt,name=readTimeout,proto3" json:"readTimeout,omitempty"`
	WriteTimeout string `protobuf:"bytes,7,opt,name=writeTimeout,proto3" json:"writeTimeout,omitempty"`
}

func (x *Data_Redis) Reset() {
	*x = Data_Redis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Redis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Redis) ProtoMessage() {}

func (x *Data_Redis) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Redis.ProtoReflect.Descriptor instead.
func (*Data_Redis) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{3, 1}
}

func (x *Data_Redis) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Data_Redis) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Data_Redis) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Data_Redis) GetDb() int32 {
	if x != nil {
		return x.Db
	}
	return 0
}

func (x *Data_Redis) GetDialTimeout() string {
	if x != nil {
		return x.DialTimeout
	}
	return ""
}

func (x *Data_Redis) GetReadTimeout() string {
	if x != nil {
		return x.ReadTimeout
	}
	return ""
}

func (x *Data_Redis) GetWriteTimeout() string {
	if x != nil {
		return x.WriteTimeout
	}
	return ""
}

type Data_ES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address  []string `protobuf:"bytes,1,rep,name=address,proto3" json:"address,omitempty"`
	Username string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *Data_ES) Reset() {
	*x = Data_ES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_ES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_ES) ProtoMessage() {}

func (x *Data_ES) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_ES.ProtoReflect.Descriptor instead.
func (*Data_ES) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{3, 2}
}

func (x *Data_ES) GetAddress() []string {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Data_ES) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Data_ES) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Consul_Kv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictPath string `protobuf:"bytes,1,opt,name=dictPath,proto3" json:"dictPath,omitempty"`
}

func (x *Consul_Kv) Reset() {
	*x = Consul_Kv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Consul_Kv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consul_Kv) ProtoMessage() {}

func (x *Consul_Kv) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consul_Kv.ProtoReflect.Descriptor instead.
func (*Consul_Kv) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Consul_Kv) GetDictPath() string {
	if x != nil {
		return x.DictPath
	}
	return ""
}

type Consul_Discovery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoGrpcLayout string `protobuf:"bytes,1,opt,name=goGrpcLayout,proto3" json:"goGrpcLayout,omitempty"`
}

func (x *Consul_Discovery) Reset() {
	*x = Consul_Discovery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Consul_Discovery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consul_Discovery) ProtoMessage() {}

func (x *Consul_Discovery) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consul_Discovery.ProtoReflect.Descriptor instead.
func (*Consul_Discovery) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{4, 1}
}

func (x *Consul_Discovery) GetGoGrpcLayout() string {
	if x != nil {
		return x.GoGrpcLayout
	}
	return ""
}

type Cors_Whitelist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowOrigin      string `protobuf:"bytes,1,opt,name=allowOrigin,proto3" json:"allowOrigin,omitempty"`
	AllowHeaders     string `protobuf:"bytes,2,opt,name=allowHeaders,proto3" json:"allowHeaders,omitempty"`
	AllowMethods     string `protobuf:"bytes,3,opt,name=allowMethods,proto3" json:"allowMethods,omitempty"`
	ExposeHeaders    string `protobuf:"bytes,4,opt,name=exposeHeaders,proto3" json:"exposeHeaders,omitempty"`
	AllowCredentials bool   `protobuf:"varint,5,opt,name=allowCredentials,proto3" json:"allowCredentials,omitempty"`
}

func (x *Cors_Whitelist) Reset() {
	*x = Cors_Whitelist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cors_Whitelist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cors_Whitelist) ProtoMessage() {}

func (x *Cors_Whitelist) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cors_Whitelist.ProtoReflect.Descriptor instead.
func (*Cors_Whitelist) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{11, 0}
}

func (x *Cors_Whitelist) GetAllowOrigin() string {
	if x != nil {
		return x.AllowOrigin
	}
	return ""
}

func (x *Cors_Whitelist) GetAllowHeaders() string {
	if x != nil {
		return x.AllowHeaders
	}
	return ""
}

func (x *Cors_Whitelist) GetAllowMethods() string {
	if x != nil {
		return x.AllowMethods
	}
	return ""
}

func (x *Cors_Whitelist) GetExposeHeaders() string {
	if x != nil {
		return x.ExposeHeaders
	}
	return ""
}

func (x *Cors_Whitelist) GetAllowCredentials() bool {
	if x != nil {
		return x.AllowCredentials
	}
	return false
}

type Kafka_Producer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic   string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Address []string `protobuf:"bytes,2,rep,name=address,proto3" json:"address,omitempty"`
}

func (x *Kafka_Producer) Reset() {
	*x = Kafka_Producer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Kafka_Producer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kafka_Producer) ProtoMessage() {}

func (x *Kafka_Producer) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kafka_Producer.ProtoReflect.Descriptor instead.
func (*Kafka_Producer) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{12, 0}
}

func (x *Kafka_Producer) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Kafka_Producer) GetAddress() []string {
	if x != nil {
		return x.Address
	}
	return nil
}

type Kafka_Consumer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic   string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Address []string `protobuf:"bytes,2,rep,name=address,proto3" json:"address,omitempty"`
	Func    []string `protobuf:"bytes,3,rep,name=func,proto3" json:"func,omitempty"`
}

func (x *Kafka_Consumer) Reset() {
	*x = Kafka_Consumer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Kafka_Consumer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kafka_Consumer) ProtoMessage() {}

func (x *Kafka_Consumer) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kafka_Consumer.ProtoReflect.Descriptor instead.
func (*Kafka_Consumer) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{12, 1}
}

func (x *Kafka_Consumer) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Kafka_Consumer) GetAddress() []string {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Kafka_Consumer) GetFunc() []string {
	if x != nil {
		return x.Func
	}
	return nil
}

type Email_Topics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Subject string   `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	To      []string `protobuf:"bytes,3,rep,name=to,proto3" json:"to,omitempty"`
}

func (x *Email_Topics) Reset() {
	*x = Email_Topics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Email_Topics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Email_Topics) ProtoMessage() {}

func (x *Email_Topics) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Email_Topics.ProtoReflect.Descriptor instead.
func (*Email_Topics) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{13, 0}
}

func (x *Email_Topics) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Email_Topics) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Email_Topics) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

type Holmes_CPU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min      int32  `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Diff     int32  `protobuf:"varint,2,opt,name=diff,proto3" json:"diff,omitempty"`
	Abs      int32  `protobuf:"varint,3,opt,name=abs,proto3" json:"abs,omitempty"`
	CoolDown string `protobuf:"bytes,4,opt,name=coolDown,proto3" json:"coolDown,omitempty"`
}

func (x *Holmes_CPU) Reset() {
	*x = Holmes_CPU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Holmes_CPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Holmes_CPU) ProtoMessage() {}

func (x *Holmes_CPU) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Holmes_CPU.ProtoReflect.Descriptor instead.
func (*Holmes_CPU) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{14, 0}
}

func (x *Holmes_CPU) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Holmes_CPU) GetDiff() int32 {
	if x != nil {
		return x.Diff
	}
	return 0
}

func (x *Holmes_CPU) GetAbs() int32 {
	if x != nil {
		return x.Abs
	}
	return 0
}

func (x *Holmes_CPU) GetCoolDown() string {
	if x != nil {
		return x.CoolDown
	}
	return ""
}

type Holmes_Mem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min      int32  `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Diff     int32  `protobuf:"varint,2,opt,name=diff,proto3" json:"diff,omitempty"`
	Abs      int32  `protobuf:"varint,3,opt,name=abs,proto3" json:"abs,omitempty"`
	CoolDown string `protobuf:"bytes,4,opt,name=coolDown,proto3" json:"coolDown,omitempty"`
}

func (x *Holmes_Mem) Reset() {
	*x = Holmes_Mem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Holmes_Mem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Holmes_Mem) ProtoMessage() {}

func (x *Holmes_Mem) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Holmes_Mem.ProtoReflect.Descriptor instead.
func (*Holmes_Mem) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{14, 1}
}

func (x *Holmes_Mem) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Holmes_Mem) GetDiff() int32 {
	if x != nil {
		return x.Diff
	}
	return 0
}

func (x *Holmes_Mem) GetAbs() int32 {
	if x != nil {
		return x.Abs
	}
	return 0
}

func (x *Holmes_Mem) GetCoolDown() string {
	if x != nil {
		return x.CoolDown
	}
	return ""
}

type Holmes_GCHeap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min      int32  `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Diff     int32  `protobuf:"varint,2,opt,name=diff,proto3" json:"diff,omitempty"`
	Abs      int32  `protobuf:"varint,3,opt,name=abs,proto3" json:"abs,omitempty"`
	CoolDown string `protobuf:"bytes,4,opt,name=coolDown,proto3" json:"coolDown,omitempty"`
}

func (x *Holmes_GCHeap) Reset() {
	*x = Holmes_GCHeap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Holmes_GCHeap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Holmes_GCHeap) ProtoMessage() {}

func (x *Holmes_GCHeap) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Holmes_GCHeap.ProtoReflect.Descriptor instead.
func (*Holmes_GCHeap) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{14, 2}
}

func (x *Holmes_GCHeap) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Holmes_GCHeap) GetDiff() int32 {
	if x != nil {
		return x.Diff
	}
	return 0
}

func (x *Holmes_GCHeap) GetAbs() int32 {
	if x != nil {
		return x.Abs
	}
	return 0
}

func (x *Holmes_GCHeap) GetCoolDown() string {
	if x != nil {
		return x.CoolDown
	}
	return ""
}

type Holmes_Goroutine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min      int32  `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Diff     int32  `protobuf:"varint,2,opt,name=diff,proto3" json:"diff,omitempty"`
	Abs      int32  `protobuf:"varint,3,opt,name=abs,proto3" json:"abs,omitempty"`
	Max      int32  `protobuf:"varint,4,opt,name=max,proto3" json:"max,omitempty"`
	CoolDown string `protobuf:"bytes,5,opt,name=coolDown,proto3" json:"coolDown,omitempty"`
}

func (x *Holmes_Goroutine) Reset() {
	*x = Holmes_Goroutine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configs_conf_conf_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Holmes_Goroutine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Holmes_Goroutine) ProtoMessage() {}

func (x *Holmes_Goroutine) ProtoReflect() protoreflect.Message {
	mi := &file_configs_conf_conf_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Holmes_Goroutine.ProtoReflect.Descriptor instead.
func (*Holmes_Goroutine) Descriptor() ([]byte, []int) {
	return file_configs_conf_conf_proto_rawDescGZIP(), []int{14, 3}
}

func (x *Holmes_Goroutine) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Holmes_Goroutine) GetDiff() int32 {
	if x != nil {
		return x.Diff
	}
	return 0
}

func (x *Holmes_Goroutine) GetAbs() int32 {
	if x != nil {
		return x.Abs
	}
	return 0
}

func (x *Holmes_Goroutine) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *Holmes_Goroutine) GetCoolDown() string {
	if x != nil {
		return x.CoolDown
	}
	return ""
}

var File_configs_conf_conf_proto protoreflect.FileDescriptor

var file_configs_conf_conf_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x22, 0xa1, 0x05, 0x0a, 0x04,
	0x43, 0x6f, 0x6e, 0x66, 0x12, 0x30, 0x0a, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x61,
	0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x06,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x03, 0x6a, 0x77, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x4a, 0x77, 0x74, 0x52, 0x03, 0x6a, 0x77, 0x74, 0x12, 0x2d, 0x0a,
	0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x03,
	0x7a, 0x61, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x5a, 0x61, 0x70,
	0x52, 0x03, 0x7a, 0x61, 0x70, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68,
	0x61, 0x52, 0x07, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6c, 0x52, 0x06, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x12, 0x30, 0x0a, 0x06,
	0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e,
	0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52, 0x06, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x12, 0x33,
	0x0a, 0x07, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x52, 0x07, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x04, 0x63, 0x6f, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x43, 0x6f, 0x72, 0x73, 0x52, 0x04, 0x63, 0x6f, 0x72, 0x73, 0x12,
	0x2d, 0x0a, 0x05, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x52, 0x05, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x12, 0x2d,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x30, 0x0a,
	0x06, 0x68, 0x6f, 0x6c, 0x6d, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x2e, 0x48, 0x6f, 0x6c, 0x6d, 0x65, 0x73, 0x52, 0x06, 0x68, 0x6f, 0x6c, 0x6d, 0x65, 0x73, 0x22,
	0x5e, 0x0a, 0x06, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x8e, 0x02, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x04, 0x68, 0x74,
	0x74, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12, 0x31, 0x0a,
	0x04, 0x67, 0x72, 0x70, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x52, 0x50, 0x43, 0x52, 0x04, 0x67, 0x72, 0x70, 0x63,
	0x1a, 0x4e, 0x0a, 0x04, 0x48, 0x54, 0x54, 0x50, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x1a, 0x4e, 0x0a, 0x04, 0x47, 0x52, 0x50, 0x43, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x22, 0xf6, 0x03, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x05, 0x6d, 0x79, 0x73,
	0x71, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x52, 0x05, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x12, 0x32, 0x0a,
	0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x52, 0x05, 0x72, 0x65, 0x64, 0x69,
	0x73, 0x12, 0x29, 0x0a, 0x02, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x53, 0x52, 0x02, 0x65, 0x73, 0x1a, 0x37, 0x0a, 0x05,
	0x4d, 0x79, 0x73, 0x71, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0xc9, 0x01, 0x0a, 0x05, 0x52, 0x65, 0x64, 0x69, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x62, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x64, 0x62, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x61,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72,
	0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x77, 0x72, 0x69, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x72, 0x69, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x1a, 0x56, 0x0a, 0x02, 0x45, 0x53, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xae, 0x02, 0x0a, 0x06, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2b, 0x0a, 0x02, 0x6b, 0x76, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x61,
	0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x2e, 0x4b,
	0x76, 0x52, 0x02, 0x6b, 0x76, 0x12, 0x40, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6c, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x09, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x1a, 0x20, 0x0a, 0x02, 0x4b, 0x76, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x50, 0x61, 0x74, 0x68, 0x1a, 0x2f, 0x0a, 0x09, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x6f, 0x47, 0x72, 0x70, 0x63,
	0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x6f,
	0x47, 0x72, 0x70, 0x63, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x22, 0x7f, 0x0a, 0x03, 0x4a, 0x77,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x22, 0x23, 0x0a, 0x05, 0x54,
	0x72, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x22, 0xbd, 0x01, 0x0a, 0x03, 0x5a, 0x61, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x6d, 0x61, 0x78, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x6d, 0x61, 0x78, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x61, 0x78, 0x41, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61,
	0x78, 0x41, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x85, 0x01, 0x0a, 0x07, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x6b, 0x65, 0x77, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x6b, 0x65, 0x77, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x64, 0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1c, 0x0a, 0x06, 0x43, 0x61, 0x73, 0x62,
	0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x1d, 0x0a, 0x07, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x72, 0x61, 0x74, 0x65, 0x22, 0xa4, 0x02, 0x0a, 0x04, 0x43, 0x6f, 0x72, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e,
	0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x43, 0x6f, 0x72, 0x73, 0x2e, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x1a, 0xc7, 0x01, 0x0a, 0x09, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x78,
	0x70, 0x6f, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x2a, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x22, 0x8f, 0x02, 0x0a,
	0x05, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x12, 0x3c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x4b, 0x61, 0x66, 0x6b,
	0x61, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x2e,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x1a, 0x3a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x4e,
	0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x75,
	0x6e, 0x63, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x66, 0x75, 0x6e, 0x63, 0x22, 0xa7,
	0x02, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73,
	0x53, 0x73, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x53, 0x73, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73,
	0x1a, 0x46, 0x0a, 0x06, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22, 0xba, 0x05, 0x0a, 0x06, 0x48, 0x6f, 0x6c,
	0x6d, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x03, 0x63, 0x50, 0x55, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x2e, 0x48, 0x6f, 0x6c, 0x6d, 0x65, 0x73, 0x2e, 0x43, 0x50, 0x55, 0x52, 0x03,
	0x63, 0x50, 0x55, 0x12, 0x2e, 0x0a, 0x03, 0x6d, 0x65, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x2e, 0x48, 0x6f, 0x6c, 0x6d, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x52, 0x03,
	0x6d, 0x65, 0x6d, 0x12, 0x37, 0x0a, 0x06, 0x67, 0x43, 0x48, 0x65, 0x61, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x61, 0x6e,
	0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x48, 0x6f, 0x6c, 0x6d, 0x65, 0x73, 0x2e, 0x47, 0x43,
	0x48, 0x65, 0x61, 0x70, 0x52, 0x06, 0x67, 0x43, 0x48, 0x65, 0x61, 0x70, 0x12, 0x40, 0x0a, 0x09,
	0x67, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x61, 0x6e, 0x79, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x2e, 0x48, 0x6f, 0x6c, 0x6d, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x52, 0x09, 0x67, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x1a, 0x59,
	0x0a, 0x03, 0x43, 0x50, 0x55, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x66, 0x66, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x69, 0x66, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x62, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x62, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6f, 0x6f, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6f, 0x6f, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x1a, 0x59, 0x0a, 0x03, 0x4d, 0x65, 0x6d,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d,
	0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x66, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x64, 0x69, 0x66, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x62, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x62, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6f, 0x6c,
	0x44, 0x6f, 0x77, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6f, 0x6c,
	0x44, 0x6f, 0x77, 0x6e, 0x1a, 0x5c, 0x0a, 0x06, 0x47, 0x43, 0x48, 0x65, 0x61, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x69, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x66, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x64, 0x69, 0x66, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x62, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x61, 0x62, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6f, 0x6c, 0x44, 0x6f,
	0x77, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6f, 0x6c, 0x44, 0x6f,
	0x77, 0x6e, 0x1a, 0x71, 0x0a, 0x09, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x69,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x66, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x64, 0x69, 0x66, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x62, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x61, 0x62, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6f,
	0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6f,
	0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x69, 0x61, 0x6f, 0x68, 0x75, 0x62, 0x61, 0x69, 0x2f, 0x67, 0x6f,
	0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_configs_conf_conf_proto_rawDescOnce sync.Once
	file_configs_conf_conf_proto_rawDescData = file_configs_conf_conf_proto_rawDesc
)

func file_configs_conf_conf_proto_rawDescGZIP() []byte {
	file_configs_conf_conf_proto_rawDescOnce.Do(func() {
		file_configs_conf_conf_proto_rawDescData = protoimpl.X.CompressGZIP(file_configs_conf_conf_proto_rawDescData)
	})
	return file_configs_conf_conf_proto_rawDescData
}

var file_configs_conf_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_configs_conf_conf_proto_goTypes = []interface{}{
	(*Conf)(nil),             // 0: configs.any.conf.Conf
	(*Global)(nil),           // 1: configs.any.conf.Global
	(*Server)(nil),           // 2: configs.any.conf.Server
	(*Data)(nil),             // 3: configs.any.conf.Data
	(*Consul)(nil),           // 4: configs.any.conf.Consul
	(*Jwt)(nil),              // 5: configs.any.conf.Jwt
	(*Trace)(nil),            // 6: configs.any.conf.Trace
	(*Zap)(nil),              // 7: configs.any.conf.Zap
	(*Captcha)(nil),          // 8: configs.any.conf.Captcha
	(*Casbin)(nil),           // 9: configs.any.conf.Casbin
	(*Limiter)(nil),          // 10: configs.any.conf.Limiter
	(*Cors)(nil),             // 11: configs.any.conf.Cors
	(*Kafka)(nil),            // 12: configs.any.conf.Kafka
	(*Email)(nil),            // 13: configs.any.conf.Email
	(*Holmes)(nil),           // 14: configs.any.conf.Holmes
	(*Server_HTTP)(nil),      // 15: configs.any.conf.Server.HTTP
	(*Server_GRPC)(nil),      // 16: configs.any.conf.Server.GRPC
	(*Data_Mysql)(nil),       // 17: configs.any.conf.Data.Mysql
	(*Data_Redis)(nil),       // 18: configs.any.conf.Data.Redis
	(*Data_ES)(nil),          // 19: configs.any.conf.Data.ES
	(*Consul_Kv)(nil),        // 20: configs.any.conf.Consul.Kv
	(*Consul_Discovery)(nil), // 21: configs.any.conf.Consul.Discovery
	(*Cors_Whitelist)(nil),   // 22: configs.any.conf.Cors.Whitelist
	(*Kafka_Producer)(nil),   // 23: configs.any.conf.Kafka.Producer
	(*Kafka_Consumer)(nil),   // 24: configs.any.conf.Kafka.Consumer
	(*Email_Topics)(nil),     // 25: configs.any.conf.Email.Topics
	(*Holmes_CPU)(nil),       // 26: configs.any.conf.Holmes.CPU
	(*Holmes_Mem)(nil),       // 27: configs.any.conf.Holmes.Mem
	(*Holmes_GCHeap)(nil),    // 28: configs.any.conf.Holmes.GCHeap
	(*Holmes_Goroutine)(nil), // 29: configs.any.conf.Holmes.Goroutine
}
var file_configs_conf_conf_proto_depIdxs = []int32{
	1,  // 0: configs.any.conf.Conf.global:type_name -> configs.any.conf.Global
	2,  // 1: configs.any.conf.Conf.server:type_name -> configs.any.conf.Server
	3,  // 2: configs.any.conf.Conf.Data:type_name -> configs.any.conf.Data
	5,  // 3: configs.any.conf.Conf.jwt:type_name -> configs.any.conf.Jwt
	6,  // 4: configs.any.conf.Conf.trace:type_name -> configs.any.conf.Trace
	7,  // 5: configs.any.conf.Conf.zap:type_name -> configs.any.conf.Zap
	8,  // 6: configs.any.conf.Conf.captcha:type_name -> configs.any.conf.Captcha
	4,  // 7: configs.any.conf.Conf.Consul:type_name -> configs.any.conf.Consul
	9,  // 8: configs.any.conf.Conf.casbin:type_name -> configs.any.conf.Casbin
	10, // 9: configs.any.conf.Conf.limiter:type_name -> configs.any.conf.Limiter
	11, // 10: configs.any.conf.Conf.cors:type_name -> configs.any.conf.Cors
	12, // 11: configs.any.conf.Conf.kafka:type_name -> configs.any.conf.Kafka
	13, // 12: configs.any.conf.Conf.email:type_name -> configs.any.conf.Email
	14, // 13: configs.any.conf.Conf.holmes:type_name -> configs.any.conf.Holmes
	15, // 14: configs.any.conf.Server.http:type_name -> configs.any.conf.Server.HTTP
	16, // 15: configs.any.conf.Server.grpc:type_name -> configs.any.conf.Server.GRPC
	17, // 16: configs.any.conf.Data.mysql:type_name -> configs.any.conf.Data.Mysql
	18, // 17: configs.any.conf.Data.redis:type_name -> configs.any.conf.Data.Redis
	19, // 18: configs.any.conf.Data.es:type_name -> configs.any.conf.Data.ES
	20, // 19: configs.any.conf.Consul.kv:type_name -> configs.any.conf.Consul.Kv
	21, // 20: configs.any.conf.Consul.discovery:type_name -> configs.any.conf.Consul.Discovery
	22, // 21: configs.any.conf.Cors.whitelist:type_name -> configs.any.conf.Cors.Whitelist
	23, // 22: configs.any.conf.Kafka.producer:type_name -> configs.any.conf.Kafka.Producer
	24, // 23: configs.any.conf.Kafka.consumer:type_name -> configs.any.conf.Kafka.Consumer
	25, // 24: configs.any.conf.Email.topics:type_name -> configs.any.conf.Email.Topics
	26, // 25: configs.any.conf.Holmes.cPU:type_name -> configs.any.conf.Holmes.CPU
	27, // 26: configs.any.conf.Holmes.mem:type_name -> configs.any.conf.Holmes.Mem
	28, // 27: configs.any.conf.Holmes.gCHeap:type_name -> configs.any.conf.Holmes.GCHeap
	29, // 28: configs.any.conf.Holmes.goroutine:type_name -> configs.any.conf.Holmes.Goroutine
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_configs_conf_conf_proto_init() }
func file_configs_conf_conf_proto_init() {
	if File_configs_conf_conf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_configs_conf_conf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Global); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Consul); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Jwt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Zap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Captcha); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Casbin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Limiter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Kafka); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Email); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Holmes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_HTTP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_GRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_Mysql); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_Redis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_ES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Consul_Kv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Consul_Discovery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cors_Whitelist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Kafka_Producer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Kafka_Consumer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Email_Topics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Holmes_CPU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Holmes_Mem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Holmes_GCHeap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configs_conf_conf_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Holmes_Goroutine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_configs_conf_conf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_configs_conf_conf_proto_goTypes,
		DependencyIndexes: file_configs_conf_conf_proto_depIdxs,
		MessageInfos:      file_configs_conf_conf_proto_msgTypes,
	}.Build()
	File_configs_conf_conf_proto = out.File
	file_configs_conf_conf_proto_rawDesc = nil
	file_configs_conf_conf_proto_goTypes = nil
	file_configs_conf_conf_proto_depIdxs = nil
}
